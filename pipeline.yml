---
jobs:
- name: test-broker
  plan:
  - get: broker-src
    trigger: true
  - task: run-tests
    file: broker-src/run-tests.yml

- name: push-broker-staging
  serial_groups: [staging]
  serial: true
  plan:
  - in_parallel:
    - get: broker-src
      passed: [test-broker]
      trigger: true
    - get: pipeline-tasks
  - put: broker-deploy-staging
    params:
      path: broker-src
      manifest: broker-src/manifest.yml
      environment_variables:
        UAA_ADDRESS: ((uaa-address-staging))
        UAA_CLIENT_ID: ((uaa-client-id-staging))
        UAA_CLIENT_SECRET: ((uaa-client-secret-staging))
        UAA_ZONE: ((uaa-zone-staging))
        CF_ADDRESS: ((cf-api-url-staging))
        BROKER_USERNAME: ((broker-username-staging))
        BROKER_PASSWORD: ((broker-password-staging))
        EMAIL_ADDRESS: ((email-address-staging))
  - task: update-broker
    file: pipeline-tasks/register-service-broker.yml
    params:
      CF_API_URL: ((cf-api-url-staging))
      CF_USERNAME: ((cf-deploy-username-staging))
      CF_PASSWORD: ((cf-deploy-password-staging))
      CF_ORGANIZATION: ((cf-organization-staging))
      CF_SPACE: ((cf-space-staging))
      BROKER_NAME: uaa-credentials-broker
      AUTH_USER: ((broker-username-staging))
      AUTH_PASS: ((broker-password-staging))
      SERVICES: cloud-gov-service-account cloud-gov-identity-provider
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy uaa-credentials-broker on ((cf-api-url-staging))
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed uaa-credentials-broker on ((cf-api-url-staging))
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: acceptance-tests-staging
  serial_groups: [staging]
  serial: true
  plan:
  - get: broker-src
    passed: [push-broker-staging]
    trigger: true
  - task: acceptance-tests-staging
    file: broker-src/acceptance-tests.yml
    params:
      CF_API_URL: ((cf-api-url-staging))
      CF_USERNAME: ((cf-deploy-username-test-staging))
      CF_PASSWORD: ((cf-deploy-password-test-staging))
      CF_ORGANIZATION: ((cf-organization-test-staging))
      CF_SPACE: ((cf-space-test-staging))
      UAA_API_URL: ((uaa-address-staging))
      UAA_CLIENT_ID: ((uaa-client-id-test-staging))
      UAA_CLIENT_SECRET: ((uaa-client-secret-test-staging))
      CLIENT_SERVICE_NAME: cloud-gov-identity-provider
      USER_SERVICE_NAME: cloud-gov-service-account
      CLIENT_PLAN_NAME: oauth-client
      USER_PLAN_NAME: space-deployer
      SERVICE_INSTANCE_NAME: uaa-credentials-acceptance

- name: push-broker-production
  serial_groups: [production]
  serial: true
  plan:
  - in_parallel:
    - get: broker-src
      passed: [acceptance-tests-staging]
      trigger: true
    - get: pipeline-tasks
      passed: [push-broker-staging]
  - put: broker-deploy-production
    params:
      path: broker-src
      manifest: broker-src/manifest.yml
      environment_variables:
        UAA_ADDRESS: ((uaa-address-production))
        UAA_CLIENT_ID: ((uaa-client-id-production))
        UAA_CLIENT_SECRET: ((uaa-client-secret-production))
        UAA_ZONE: ((uaa-zone-production))
        CF_ADDRESS: ((cf-api-url-production))
        BROKER_USERNAME: ((broker-username-production))
        BROKER_PASSWORD: ((broker-password-production))
        EMAIL_ADDRESS: ((email-address-production))
  - task: update-broker-identity-provider
    file: pipeline-tasks/register-service-broker.yml
    params:
      CF_API_URL: ((cf-api-url-production))
      CF_USERNAME: ((cf-deploy-username-production))
      CF_PASSWORD: ((cf-deploy-password-production))
      CF_ORGANIZATION: ((cf-organization-production))
      CF_SPACE: ((cf-space-production))
      BROKER_NAME: uaa-credentials-broker
      AUTH_USER: ((broker-username-production))
      AUTH_PASS: ((broker-password-production))
      SERVICES: cloud-gov-identity-provider
  - task: update-broker-service-account
    file: pipeline-tasks/register-service-broker.yml
    params:
      CF_API_URL: ((cf-api-url-production))
      CF_USERNAME: ((cf-deploy-username-production))
      CF_PASSWORD: ((cf-deploy-password-production))
      CF_ORGANIZATION: ((cf-organization-production))
      CF_SPACE: ((cf-space-production))
      BROKER_NAME: uaa-credentials-broker
      AUTH_USER: ((broker-username-production))
      AUTH_PASS: ((broker-password-production))
      SERVICES: cloud-gov-service-account
      SERVICE_ORGANIZATION_BLACKLIST: ((service-account-blacklist))
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy uaa-credentials-broker on ((cf-api-url-production))
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed uaa-credentials-broker on ((cf-api-url-production))
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: acceptance-tests-production
  serial_groups: [production]
  serial: true
  plan:
  - get: broker-src
    passed: [push-broker-production]
    trigger: true
  - task: acceptance-tests-production
    file: broker-src/acceptance-tests.yml
    params:
      CF_API_URL: ((cf-api-url-production))
      CF_USERNAME: ((cf-deploy-username-test-production))
      CF_PASSWORD: ((cf-deploy-password-test-production))
      CF_ORGANIZATION: ((cf-organization-test-production))
      CF_SPACE: ((cf-space-test-production))
      UAA_API_URL: ((uaa-address-production))
      UAA_CLIENT_ID: ((uaa-client-id-test-production))
      UAA_CLIENT_SECRET: ((uaa-client-secret-test-production))
      CLIENT_SERVICE_NAME: cloud-gov-identity-provider
      USER_SERVICE_NAME: cloud-gov-service-account
      CLIENT_PLAN_NAME: oauth-client
      USER_PLAN_NAME: space-deployer
      SERVICE_INSTANCE_NAME: uaa-credentials-acceptance

- name: push-broker-westb
  serial_groups: [westb]
  serial: true
  plan:
  - in_parallel:
    - get: broker-src
      passed: [acceptance-tests-staging]
      trigger: true
    - get: pipeline-tasks
      passed: [push-broker-staging]
  - put: broker-deploy-westb
    params:
      path: broker-src
      manifest: broker-src/manifest.yml
      environment_variables:
        UAA_ADDRESS: ((uaa-address-westb))
        UAA_CLIENT_ID: ((uaa-client-id-westb))
        UAA_CLIENT_SECRET: ((uaa-client-secret-westb))
        UAA_ZONE: ((uaa-zone-westb))
        CF_ADDRESS: ((cf-api-url-westb))
        BROKER_USERNAME: ((broker-username-westb))
        BROKER_PASSWORD: ((broker-password-westb))
        EMAIL_ADDRESS: ((email-address-westb))
  - task: update-broker-identity-provider
    file: pipeline-tasks/register-service-broker.yml
    params:
      CF_API_URL: ((cf-api-url-westb))
      CF_USERNAME: ((cf-deploy-username-westb))
      CF_PASSWORD: ((cf-deploy-password-westb))
      CF_ORGANIZATION: ((cf-organization-westb))
      CF_SPACE: ((cf-space-westb))
      BROKER_NAME: uaa-credentials-broker
      AUTH_USER: ((broker-username-westb))
      AUTH_PASS: ((broker-password-westb))
      SERVICES: cloud-gov-identity-provider
  - task: update-broker-service-account
    file: pipeline-tasks/register-service-broker.yml
    params:
      CF_API_URL: ((cf-api-url-westb))
      CF_USERNAME: ((cf-deploy-username-westb))
      CF_PASSWORD: ((cf-deploy-password-westb))
      CF_ORGANIZATION: ((cf-organization-westb))
      CF_SPACE: ((cf-space-westb))
      BROKER_NAME: uaa-credentials-broker
      AUTH_USER: ((broker-username-westb))
      AUTH_PASS: ((broker-password-westb))
      SERVICES: cloud-gov-service-account
      SERVICE_ORGANIZATION_BLACKLIST: ((service-account-blacklist))
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy uaa-credentials-broker on ((cf-api-url-westb))
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed uaa-credentials-broker on ((cf-api-url-westb))
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: acceptance-tests-westb
  serial_groups: [westb]
  serial: true
  plan:
  - get: broker-src
    passed: [push-broker-westb]
    trigger: true
  - task: acceptance-tests-westb
    file: broker-src/acceptance-tests.yml
    params:
      CF_API_URL: ((cf-api-url-westb))
      CF_USERNAME: ((cf-deploy-username-test-westb))
      CF_PASSWORD: ((cf-deploy-password-test-westb))
      CF_ORGANIZATION: ((cf-organization-test-westb))
      CF_SPACE: ((cf-space-test-westb))
      UAA_API_URL: ((uaa-address-westb))
      UAA_CLIENT_ID: ((uaa-client-id-test-westb))
      UAA_CLIENT_SECRET: ((uaa-client-secret-test-westb))
      CLIENT_SERVICE_NAME: cloud-gov-identity-provider
      USER_SERVICE_NAME: cloud-gov-service-account
      CLIENT_PLAN_NAME: oauth-client
      USER_PLAN_NAME: space-deployer
      SERVICE_INSTANCE_NAME: uaa-credentials-acceptance

- name: push-broker-easta
  serial_groups: [easta]
  serial: true
  plan:
  - in_parallel:
    - get: broker-src
      passed: [acceptance-tests-staging]
      trigger: true
    - get: pipeline-tasks
      passed: [push-broker-staging]
  - put: broker-deploy-easta
    params:
      path: broker-src
      manifest: broker-src/manifest.yml
      environment_variables:
        UAA_ADDRESS: ((uaa-address-easta))
        UAA_CLIENT_ID: ((uaa-client-id-easta))
        UAA_CLIENT_SECRET: ((uaa-client-secret-easta))
        UAA_ZONE: ((uaa-zone-easta))
        CF_ADDRESS: ((cf-api-url-easta))
        BROKER_USERNAME: ((broker-username-easta))
        BROKER_PASSWORD: ((broker-password-easta))
        EMAIL_ADDRESS: ((email-address-easta))
  - task: update-broker-identity-provider
    file: pipeline-tasks/register-service-broker.yml
    params:
      CF_API_URL: ((cf-api-url-easta))
      CF_USERNAME: ((cf-deploy-username-easta))
      CF_PASSWORD: ((cf-deploy-password-easta))
      CF_ORGANIZATION: ((cf-organization-easta))
      CF_SPACE: ((cf-space-easta))
      BROKER_NAME: uaa-credentials-broker
      AUTH_USER: ((broker-username-easta))
      AUTH_PASS: ((broker-password-easta))
      SERVICES: cloud-gov-identity-provider
  - task: update-broker-service-account
    file: pipeline-tasks/register-service-broker.yml
    params:
      CF_API_URL: ((cf-api-url-easta))
      CF_USERNAME: ((cf-deploy-username-easta))
      CF_PASSWORD: ((cf-deploy-password-easta))
      CF_ORGANIZATION: ((cf-organization-easta))
      CF_SPACE: ((cf-space-easta))
      BROKER_NAME: uaa-credentials-broker
      AUTH_USER: ((broker-username-easta))
      AUTH_PASS: ((broker-password-easta))
      SERVICES: cloud-gov-service-account
      SERVICE_ORGANIZATION_BLACKLIST: ((service-account-blacklist))
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy uaa-credentials-broker on ((cf-api-url-easta))
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Successfully deployed uaa-credentials-broker on ((cf-api-url-easta))
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: ((slack-channel))
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: acceptance-tests-easta
  serial_groups: [easta]
  serial: true
  plan:
  - get: broker-src
    passed: [push-broker-easta]
    trigger: true
  - task: acceptance-tests-easta
    file: broker-src/acceptance-tests.yml
    params:
      CF_API_URL: ((cf-api-url-easta))
      CF_USERNAME: ((cf-deploy-username-test-easta))
      CF_PASSWORD: ((cf-deploy-password-test-easta))
      CF_ORGANIZATION: ((cf-organization-test-easta))
      CF_SPACE: ((cf-space-test-easta))
      UAA_API_URL: ((uaa-address-easta))
      UAA_CLIENT_ID: ((uaa-client-id-test-easta))
      UAA_CLIENT_SECRET: ((uaa-client-secret-test-easta))
      CLIENT_SERVICE_NAME: cloud-gov-identity-provider
      USER_SERVICE_NAME: cloud-gov-service-account
      CLIENT_PLAN_NAME: oauth-client
      USER_PLAN_NAME: space-deployer
      SERVICE_INSTANCE_NAME: uaa-credentials-acceptance

resources:
- name: broker-src
  type: git
  source:
    uri: ((broker-git-url))
    branch: ((broker-git-branch))

- name: pipeline-tasks
  type: git
  source:
    uri: ((pipeline-tasks-git-url))
    branch: ((pipeline-tasks-git-branch))

- name: broker-deploy-staging
  type: cf
  source:
    api: ((cf-api-url-staging))
    username: ((cf-deploy-username-staging))
    password: ((cf-deploy-password-staging))
    organization: ((cf-organization-staging))
    space: ((cf-space-staging))

- name: broker-deploy-production
  type: cf
  source:
    api: ((cf-api-url-production))
    username: ((cf-deploy-username-production))
    password: ((cf-deploy-password-production))
    organization: ((cf-organization-production))
    space: ((cf-space-production))

- name: broker-deploy-westb
  type: cf
  source:
    api: ((cf-api-url-westb))
    username: ((cf-deploy-username-westb))
    password: ((cf-deploy-password-westb))
    organization: ((cf-organization-westb))
    space: ((cf-space-westb))

- name: broker-deploy-easta
  type: cf
  source:
    api: ((cf-api-url-easta))
    username: ((cf-deploy-username-easta))
    password: ((cf-deploy-password-easta))
    organization: ((cf-organization-easta))
    space: ((cf-space-easta))

- name: slack
  type: slack-notification
  source:
    url: ((slack-webhook-url))

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
